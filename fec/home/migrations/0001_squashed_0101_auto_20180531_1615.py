# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-06-06 14:49
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion
import home.blocks
import home.models
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.contrib.table_block.blocks
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.images.blocks
import wagtail.snippets.blocks

import pdb



def create_homepage(apps, schema_editor):
    # Get models
    ContentType = apps.get_model('contenttypes.ContentType')
    Page = apps.get_model('wagtailcore.Page')
    Site = apps.get_model('wagtailcore.Site')
    HomePage = apps.get_model('home.HomePage')

    # Delete the default homepage
    Page.objects.get(id=2).delete()

    # Create content type for homepage model
    homepage_content_type, created = ContentType.objects.get_or_create(
        model='homepage', app_label='home')

    # Create a new homepage
    homepage = HomePage.objects.create(
        title="Homepage",
        slug='home',
        content_type=homepage_content_type,
        path='00010001',
        depth=2,
        numchild=0,
        url_path='/home/',
    )

    # Create a site with the new homepage set as the root
    Site.objects.create(
        hostname='localhost', root_page=homepage, is_default_site=True)

class Migration(migrations.Migration):

    replaces = [('home', '0001_initial'), ('home', '0002_create_homepage'), ('home', '0003_auto_20150819_0342'), ('home', '0004_checklistpage'), ('home', '0005_auto_20150819_0517'), ('home', '0006_auto_20150819_0546'), ('home', '0007_auto_20150901_0442'), ('home', '0008_auto_20150917_1906'), ('home', '0009_contactpage'), ('home', '0010_calendarpage'), ('home', '0011_ssfchecklistpage'), ('home', '0012_partychecklistpage'), ('home', '0013_auto_20160427_2133'), ('home', '0014_nonconnectedchecklistpage'), ('home', '0015_custompage_content'), ('home', '0016_auto_20160714_2359'), ('home', '0017_auto_20160823_1504'), ('home', '0018_record_digest_press_release'), ('home', '0019_auto_20160908_2113'), ('home', '0020_auto_20160909_0139'), ('home', '0019_auto_20160907_2152'), ('home', '0021_merge'), ('home', '0022_auto_20160923_0004'), ('home', '0023_remove_presslandingpage_feed_intro'), ('home', '0024_presslandingpage_feed_intro'), ('home', '0022_auto_20160921_2230'), ('home', '0025_merge'), ('home', '0026_auto_20161004_1620'), ('home', '0027_auto_20161004_1620'), ('home', '0025_auto_20161006_1415'), ('home', '0028_merge'), ('home', '0029_auto_20161107_0304'), ('home', '0030_pressreleasepage_formatted_title'), ('home', '0031_auto_20161201_2123'), ('home', '0032_auto_20161201_2124'), ('home', '0033_auto_20161201_2126'), ('home', '0034_pressreleasepage_homepage_pin'), ('home', '0035_pressreleasepage_homepage_hide'), ('home', '0036_auto_20161216_0202'), ('home', '0037_auto_20161216_0222'), ('home', '0038_resourcepage'), ('home', '0039_legalresourceslanding'), ('home', '0040_auto_20161228_2356'), ('home', '0041_enforcementpage'), ('home', '0042_auto_20161229_2001'), ('home', '0034_auto_20161221_1920'), ('home', '0035_recordpage_monthly_issue'), ('home', '0036_auto_20161221_2007'), ('home', '0037_recordpage_monthly_issue_url'), ('home', '0038_merge_20161223_1820'), ('home', '0043_merge_20161230_0122'), ('home', '0044_auto_20170105_0006'), ('home', '0038_aboutlandingpage'), ('home', '0039_aboutlandingpage_hero'), ('home', '0040_aboutlandingpage_mission_intro'), ('home', '0041_auto_20161227_1524'), ('home', '0042_auto_20161227_1526'), ('home', '0043_auto_20161227_1538'), ('home', '0044_aboutlandingpage_option_blocks'), ('home', '0045_merge_20170105_0036'), ('home', '0046_auto_20170105_0038'), ('home', '0047_auto_20170105_0044'), ('home', '0048_auto_20170105_0049'), ('home', '0049_auto_20170105_0052'), ('home', '0050_auto_20170105_0055'), ('home', '0051_commissionerpage'), ('home', '0052_auto_20170111_2205'), ('home', '0053_serviceslandingpage'), ('home', '0054_auto_20170118_2104'), ('home', '0055_tipsfortreasurerspage'), ('home', '0055_auto_20170123_2232'), ('home', '0056_merge_20170127_1735'), ('home', '0057_auto_20170202_0237'), ('home', '0058_documentfeedpage_documentpage'), ('home', '0059_auto_20170209_0151'), ('home', '0060_auto_20170209_2030'), ('home', '0058_auto_20170210_2136'), ('home', '0061_merge_20170210_2230'), ('home', '0062_auto_20170214_2207'), ('home', '0063_auto_20170214_2207'), ('home', '0064_auto_20170215_2153'), ('home', '0065_auto_20170221_0345'), ('home', '0066_remove_documentpage_file_name'), ('home', '0067_documentpage_year_only'), ('home', '0067_agendapage'), ('home', '0068_merge_20170310_0002'), ('home', '0069_auto_20170318_0005'), ('home', '0069_auto_20170316_0006'), ('home', '0070_merge_20170322_1940'), ('home', '0071_agendapage_imported_html'), ('home', '0072_auto_20170324_0544'), ('home', '0073_auto_20170330_1840'), ('home', '0074_auto_20170330_2222'), ('home', '0073_auto_20170329_2112'), ('home', '0075_merge_20170331_0608'), ('home', '0075_auto_20170330_2354'), ('home', '0073_auto_20170330_1915'), ('home', '0074_merge_20170330_2316'), ('home', '0076_merge_20170331_1633'), ('home', '0077_auto_20170331_1711'), ('home', '0078_auto_20170404_2137'), ('home', '0079_auto_20170420_0238'), ('home', '0080_auto_20170420_1702'), ('home', '0081_genericupdate'), ('home', '0081_auto_20170501_2216'), ('home', '0079_auto_20170414_0021'), ('home', '0082_merge_20170505_0025'), ('home', '0083_auto_20170506_0059'), ('home', '0082_merge_20170504_2212'), ('home', '0083_auto_20170504_2215'), ('home', '0084_merge_20170509_0021'), ('home', '0085_auto_20170510_1928'), ('home', '0086_auto_20170519_1726'), ('home', '0087_meetingpage_homepage_hide'), ('home', '0088_auto_20170802_2329'), ('home', '0089_auto_20170810_2215'), ('home', '0090_auto_20170811_1840'), ('home', '0088_folder'), ('home', '0091_merge_20170814_0055'), ('home', '0092_auto_20170814_0109'), ('home', '0091_merge_20170811_2035'), ('home', '0093_merge_20170814_2229'), ('home', '0094_auto_20170829_1640'), ('home', '0095_meetingpage_sunshine_act_doc_upld'), ('home', '0095_auto_20170831_2013'), ('home', '0096_merge_20170907_2031'), ('home', '0097_auto_20170929_2329'), ('home', '0098_auto_20170930_0054'), ('home', '0097_auto_20170925_1952'), ('home', '0099_merge_20171109_1546'), ('home', '0100_auto_20180126_1444'), ('home', '0101_auto_20180531_1615')]

    initial = True

    dependencies = [
        ('wagtailredirects', '0002_add_verbose_names'),
        ('wagtailcore', '0001_squashed_0016_change_page_url_path_to_text_field'),
        ('wagtailredirects', '0005_capitalizeverbose'),
        ('wagtailcore', '0029_unicode_slugfield_dj19'),
        ('wagtailimages', '0013_make_rendition_upload_callable'),
        ('wagtailsearch', '0002_add_verbose_names'),
        ('wagtailforms', '0002_add_verbose_names'),
        ('wagtailforms', '0003_capitalizeverbose'),
        ('wagtailcore', '0028_merge'),
        ('wagtailcore', '0032_add_bulk_delete_page_permission'),
        ('wagtailimages', '0017_reduce_focal_point_key_max_length'),
        ('taggit', '0002_auto_20150616_2121'),
        ('wagtailsearchpromotions', '0002_capitalizeverbose'),
    ]

    operations = [
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.RunPython(
            create_homepage,
        ),
        migrations.CreateModel(
            name='CustomPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('author', models.CharField(max_length=255)),
                ('date', models.DateField(verbose_name='Post date')),
                ('body', wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('example_paragraph', wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock(required=True)), ('paragraph', wagtail.core.blocks.RichTextBlock(required=True))))), ('example_forms', wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock(required=True)), ('forms', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('url', wagtail.core.blocks.URLBlock()), ('media_type', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.CharBlock())))))))), ('reporting_example_cards', wagtail.core.blocks.StructBlock((('card_width', wagtail.core.blocks.ChoiceBlock(choices=[(2, '1/2'), (3, '1/3')], help_text='Control the width of the cards')), ('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), icon='doc-empty')))))))),
                ('sidebar', wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True)),
                ('citations', wagtail.core.fields.StreamField((('citations', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('label', wagtail.core.blocks.CharBlock()), ('content', wagtail.core.blocks.RichTextBlock(help_text='Use Shift + Enter to add line breaks between citation and description')))))),), null=True)),
                ('continue_learning', wagtail.core.fields.StreamField((('continue_learning', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('url', wagtail.core.blocks.URLBlock()), ('media_type', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.CharBlock()))), icon='doc-empty')),), null=True)),
                ('record_articles', wagtail.core.fields.StreamField((('record_articles', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(target_model=['home.RecordPage']))),), null=True)),
                ('show_contact_link', models.BooleanField(choices=[(True, 'Show contact link'), (False, 'Do not show contact link')], default=True, max_length=255)),
                ('menu_title', models.CharField(max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='homepage',
            name='body',
            field=wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=255)),
                ('bio', models.TextField(blank=True)),
                ('photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
        ),
        migrations.CreateModel(
            name='DigestPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField(((b'heading', wagtail.core.blocks.CharBlock(classname=b'full title')), (b'paragraph', wagtail.core.blocks.RichTextBlock()), (b'html', wagtail.core.blocks.RawHTMLBlock()), (b'image', wagtail.images.blocks.ImageChooserBlock()), (b'table', wagtail.contrib.table_block.blocks.TableBlock())), blank=True, null=True)),
                ('date', models.DateField(default=datetime.date.today)),
                ('feed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('read_next', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.DigestPage')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='DigestPageAuthors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('role', models.CharField(choices=[('author', 'Author'), ('writer', 'Written by'), ('graphics', 'Graphics by'), ('contact', 'Contact')], default='author', max_length=255)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='home.Author')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='home.DigestPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PressReleasePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField(((b'heading', wagtail.core.blocks.CharBlock(classname=b'full title')), (b'paragraph', wagtail.core.blocks.RichTextBlock()), (b'html', wagtail.core.blocks.RawHTMLBlock()), (b'image', wagtail.images.blocks.ImageChooserBlock()), (b'table', wagtail.contrib.table_block.blocks.TableBlock())), blank=True, null=True)),
                ('date', models.DateField(default=datetime.date.today)),
                ('category', models.CharField(choices=[(b'audit reports', b'Audit reports'), (b'campaign finance data summaries', b'Campaign finance data summaries'), (b'commission appointments', b'Commission appointments'), (b'disclosure initiatives', b'Disclosure initiatives'), (b'enforcement matters', b'Enforcement matters'), (b'hearings', b'Hearings'), (b'litigation', b'Litigation'), (b'non-filer publications', b'Non-filer publications'), (b'open meetings and related matters', b'Open meetings and related matters'), (b'presidential public funds', b'Presidential public funds'), (b'rulemakings', b'Rulemakings'), (b'other agency actions', b'Other agency actions')], max_length=255)),
                ('feed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('read_next', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.PressReleasePage')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PressReleasePageAuthors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('role', models.CharField(choices=[('author', 'Author'), ('writer', 'Written by'), ('graphics', 'Graphics by'), ('contact', 'Contact')], default='author', max_length=255)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='home.Author')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='home.PressReleasePage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecordPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField(((b'heading', wagtail.core.blocks.CharBlock(classname=b'full title')), (b'paragraph', wagtail.core.blocks.RichTextBlock()), (b'html', wagtail.core.blocks.RawHTMLBlock()), (b'image', wagtail.images.blocks.ImageChooserBlock()), (b'table', wagtail.contrib.table_block.blocks.TableBlock())), blank=True, null=True)),
                ('date', models.DateField(default=datetime.date.today)),
                ('category', models.CharField(choices=[(b'advisory opinions', b'Advisory Opinions'), (b'commission', b'Commission'), (b'compliance', b'Compliance'), (b'litigation', b'Litigation'), (b'outreach', b'Outreach'), (b'public funding', b'Public Funding'), (b'regulations', b'Regulations'), (b'reporting', b'Reporting'), (b'statistics', b'Statistics')], max_length=255)),
                ('related_section_title', models.CharField(blank=True, default=b'Explore campaign finance data', max_length=255)),
                ('related_section_url', models.CharField(blank=True, default=b'/data/', max_length=255)),
                ('feed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('read_next', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.RecordPage')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='RecordPageAuthors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('role', models.CharField(choices=[('author', 'Author'), ('writer', 'Written by'), ('graphics', 'Graphics by'), ('contact', 'Contact')], default='author', max_length=255)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='home.Author')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='home.RecordPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='homepage',
            name='feed_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image'),
        ),
        migrations.CreateModel(
            name='CollectionPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True)),
                ('sidebar_title', models.CharField(blank=True, max_length=255, null=True)),
                ('related_pages', wagtail.core.fields.StreamField((('related_pages', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock())),), blank=True, null=True)),
                ('sections', wagtail.core.fields.StreamField((('section', wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock(required=True)), ('style', wagtail.core.blocks.ChoiceBlock(choices=[('check', 'Checklist'), ('bullet', 'Bulleted list')])), ('intro', wagtail.core.blocks.RichTextBlock(blank=False, null=False, required=False)), ('items', wagtail.core.blocks.ListBlock(wagtail.core.blocks.RichTextBlock(classname='nothing')))))),))),
                ('show_search', models.BooleanField(choices=[(True, 'Show committee search box'), (False, 'Do not show committee search box')], default=False, max_length=255)),
                ('show_contact_card', models.BooleanField(choices=[(True, 'Show contact card'), (False, 'Do not show contact card')], default=True, max_length=255)),
                ('reporting_examples', wagtail.core.fields.StreamField((('reporting_examples', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('label', wagtail.core.blocks.CharBlock()), ('content', wagtail.core.blocks.RichTextBlock(help_text='Use Shift + Enter to add line breaks between citation and description')))))),), null=True)),
                ('menu_title', models.CharField(max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AlterField(
            model_name='digestpage',
            name='body',
            field=wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock())), blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='pressreleasepage',
            name='body',
            field=wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock())), blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='pressreleasepage',
            name='category',
            field=models.CharField(choices=[('audit reports', 'Audit reports'), ('campaign finance data summaries', 'Campaign finance data summaries'), ('commission appointments', 'Commission appointments'), ('disclosure initiatives', 'Disclosure initiatives'), ('enforcement matters', 'Enforcement matters'), ('hearings', 'Hearings'), ('litigation', 'Litigation'), ('non-filer publications', 'Non-filer publications'), ('open meetings and related matters', 'Open meetings and related matters'), ('presidential public funds', 'Presidential public funds'), ('rulemakings', 'Rulemakings'), ('other agency actions', 'Other agency actions')], max_length=255),
        ),
        migrations.AlterField(
            model_name='recordpage',
            name='body',
            field=wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock())), blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='recordpage',
            name='category',
            field=models.CharField(choices=[('advisory opinions', 'Advisory opinions'), ('commission', 'Commission'), ('compliance', 'Compliance'), ('litigation', 'Litigation'), ('outreach', 'Outreach'), ('public funding', 'Public funding'), ('regulations', 'Regulations'), ('reporting', 'Reporting'), ('statistics', 'Statistics')], max_length=255),
        ),
        migrations.AlterField(
            model_name='recordpage',
            name='related_section_title',
            field=models.CharField(blank=True, default='Explore campaign finance data', max_length=255),
        ),
        migrations.AlterField(
            model_name='recordpage',
            name='related_section_url',
            field=models.CharField(blank=True, default='/data/', max_length=255),
        ),
        migrations.CreateModel(
            name='PressLandingPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('hero', wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True)),
                ('option_blocks', wagtail.core.fields.StreamField((('option_blocks', wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock(required=True)), ('intro', wagtail.core.blocks.RichTextBlock(blank=False, null=False, required=False)), ('button_text', wagtail.core.blocks.CharBlock(blank=False, null=False, required=False)), ('related_page', wagtail.core.blocks.PageChooserBlock(required=False))))),))),
                ('contact_intro', wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True)),
                ('digest_intro', wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True)),
                ('release_intro', wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AlterField(
            model_name='digestpage',
            name='body',
            field=wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock())), blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='pressreleasepage',
            name='body',
            field=wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock())), blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='pressreleasepage',
            name='category',
            field=models.CharField(choices=[('audit reports', 'Audit reports'), ('campaign finance data summaries', 'Campaign finance data summaries'), ('commission appointments', 'Commission appointments'), ('disclosure initiatives', 'Disclosure initiatives'), ('enforcement matters', 'Enforcement matters'), ('hearings', 'Hearings'), ('litigation', 'Litigation'), ('non-filer publications', 'Non-filer publications'), ('open meetings and related matters', 'Open meetings and related matters'), ('presidential public funds', 'Presidential public funds'), ('rulemakings', 'Rulemakings'), ('other agency actions', 'Other agency actions')], max_length=255),
        ),
        migrations.AlterField(
            model_name='recordpage',
            name='body',
            field=wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock())), blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='recordpage',
            name='category',
            field=models.CharField(choices=[('advisory opinions', 'Advisory opinions'), ('commission', 'Commission'), ('compliance', 'Compliance'), ('litigation', 'Litigation'), ('outreach', 'Outreach'), ('public funding', 'Public funding'), ('regulations', 'Regulations'), ('reporting', 'Reporting'), ('statistics', 'Statistics')], max_length=255),
        ),
        migrations.AlterField(
            model_name='recordpage',
            name='related_section_title',
            field=models.CharField(blank=True, default='Explore campaign finance data', max_length=255),
        ),
        migrations.AlterField(
            model_name='recordpage',
            name='related_section_url',
            field=models.CharField(blank=True, default='/data/', max_length=255),
        ),
        migrations.AlterField(
            model_name='pressreleasepage',
            name='category',
            field=models.CharField(choices=[('audit reports', 'Audit reports'), ('campaign finance data summaries', 'Campaign finance data summaries'), ('commission appointments', 'Commission appointments'), ('disclosure initiatives', 'Disclosure initiatives'), ('enforcement matters', 'Enforcement matters'), ('hearings', 'Hearings'), ('litigation', 'Litigation'), ('non-filer publications', 'Non-filer publications'), ('open meetings and related matters', 'Open meetings and related matters'), ('presidential public funds', 'Presidential public funds'), ('rulemakings', 'Rulemakings'), ('other agency actions', 'Other agency actions'), ('', '')], max_length=255),
        ),
        migrations.AlterField(
            model_name='pressreleasepage',
            name='category',
            field=models.CharField(choices=[('audit reports', 'Audit reports'), ('campaign finance data summaries', 'Campaign finance data summaries'), ('commission appointments', 'Commission appointments'), ('disclosure initiatives', 'Disclosure initiatives'), ('enforcement matters', 'Enforcement matters'), ('hearings', 'Hearings'), ('litigation', 'Litigation'), ('non-filer publications', 'Non-filer publications'), ('open meetings and related matters', 'Open meetings and related matters'), ('presidential public funds', 'Presidential public funds'), ('rulemakings', 'Rulemakings'), ('other agency actions', 'Other agency actions')], max_length=255),
        ),
        migrations.AddField(
            model_name='pressreleasepage',
            name='formatted_title',
            field=models.CharField(blank=True, default='', help_text='Use if you need italics in the title. e.g. <em>Italicized words</em>', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='pressreleasepage',
            name='homepage_pin',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='pressreleasepage',
            name='homepage_hide',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='recordpage',
            name='homepage_hide',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='recordpage',
            name='homepage_pin',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='pressreleasepage',
            name='homepage_pin_expiration',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recordpage',
            name='homepage_pin_expiration',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='ResourcePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.core.fields.StreamField((('paragraph', wagtail.core.blocks.RichTextBlock()),), null=True)),
                ('sections', wagtail.core.fields.StreamField((('sections', wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock(required=True)), ('hide_title', wagtail.core.blocks.BooleanBlock(help_text='Should the section title be displayed?', required=False)), ('content', wagtail.core.blocks.StreamBlock((('text', wagtail.core.blocks.RichTextBlock(blank=False, icon='pilcrow', null=False, required=False)), ('documents', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('url', wagtail.core.blocks.URLBlock()), ('media_type', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.CharBlock()))), icon='doc-empty', template='blocks/section-documents.html')), ('contact_info', wagtail.core.blocks.StructBlock((('label', wagtail.core.blocks.CharBlock(icon='title', required=False)), ('contact_items', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('item_label', wagtail.core.blocks.CharBlock(required=False)), ('item_icon', wagtail.core.blocks.ChoiceBlock(choices=[('email', 'Email'), ('fax', 'Fax'), ('hand', 'Hand delivery'), ('phone', 'Phone'), ('mail', 'Mail'), ('github', 'Github'), ('question-bubble', 'Question')])), ('item_info', wagtail.core.blocks.RichTextBlock(required=True))))))))), ('internal_button', wagtail.core.blocks.StructBlock((('internal_page', wagtail.core.blocks.PageChooserBlock()), ('text', wagtail.core.blocks.CharBlock())))), ('external_button', wagtail.core.blocks.StructBlock((('url', wagtail.core.blocks.URLBlock()), ('text', wagtail.core.blocks.CharBlock())))), ('page', wagtail.core.blocks.PageChooserBlock(template='blocks/page-links.html')), ('disabled_page', wagtail.core.blocks.CharBlock(blank=False, help_text='Name of a disabled link', icon='placeholder', null=False, required=False, template='blocks/disabled-page-links.html')), ('document_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock()), ('document', wagtail.documents.blocks.DocumentChooserBlock()))), icon='doc-empty', template='blocks/document-list.html')), ('current_commissioners', home.blocks.CurrentCommissionersBlock()), ('fec_jobs', home.blocks.CareersBlock()), ('mur_search', home.blocks.MURSearchBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('reporting_example_cards', wagtail.core.blocks.StructBlock((('card_width', wagtail.core.blocks.ChoiceBlock(choices=[(2, '1/2'), (3, '1/3')], help_text='Control the width of the cards')), ('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), icon='doc-empty'))))), ('contribution_limits_table', wagtail.snippets.blocks.SnippetChooserBlock('home.EmbedTableSnippet', icon='table', template='blocks/embed-table.html'))))), ('aside', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(icon='title', required=False)), ('document', wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('url', wagtail.core.blocks.URLBlock()), ('media_type', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.CharBlock())))), ('link', wagtail.core.blocks.StructBlock((('link_type', wagtail.core.blocks.ChoiceBlock(choices=[('calculator', 'Calculator'), ('calendar', 'Calendar'), ('record', 'Record'), ('search', 'Search')], help_text='Set an icon', icon='link', required=False)), ('url', wagtail.core.blocks.URLBlock()), ('text', wagtail.core.blocks.CharBlock(required=True)), ('coming_soon', wagtail.core.blocks.BooleanBlock(required=False)))))), icon='placeholder', template='blocks/section-aside.html'))))),), null=True)),
                ('citations', wagtail.core.fields.StreamField((('citations', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('label', wagtail.core.blocks.CharBlock()), ('content', wagtail.core.blocks.RichTextBlock(help_text='Use Shift + Enter to add line breaks between citation and description')))))),), null=True)),
                ('related_topics', wagtail.core.fields.StreamField((('related_topics', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(label='Related topic'))),), null=True)),
                ('breadcrumb_style', models.CharField(choices=[('primary', 'Blue'), ('secondary', 'Red')], default='primary', max_length=255)),
                ('category', models.CharField(blank=True, choices=[('audit report', 'Audit report'), ('inspection or special review report', 'Inspection or special review report'), ('semiannual report', 'Semiannual report'), ('strategic plan', 'Strategic plan'), ('work plan', 'Work plan'), ('agency financial report', 'Agency Financial Report'), ('congressional submission', 'Congressional submission'), ('performance and accountability report', 'Performance and accountability report'), ('summary of performance and financial information', 'Summary of performance and financial information'), ('annual report', 'Annual report'), ('summary report', 'Summary report'), ('privacy act notice', 'Privacy Act notice'), ('privacy policy', 'Privacy policy'), ('buy america report', 'Buy America report'), ('fair act', 'FAIR Act'), ('public procurement report', 'Public procurement report'), ('anniversary report', 'Anniversary report'), ('gift report', 'Gift report'), ('shutdown plan', 'Shutdown plan'), ('study', 'Study')], help_text='If this is a report, add a category', max_length=255, null=True)),
                ('date', models.DateField(default=datetime.date.today)),
                ('related_pages', wagtail.core.fields.StreamField((('related_pages', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock())),), blank=True, null=True)),
                ('sidebar_title', models.CharField(blank=True, max_length=255, null=True)),
                ('show_contact_card', models.BooleanField(choices=[(True, 'Show contact card'), (False, 'Do not show contact card')], default=False, max_length=255)),
                ('menu_title', models.CharField(max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='LegalResourcesLandingPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True)),
                ('feed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.AddField(
            model_name='recordpage',
            name='keywords',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='home.RecordPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AlterField(
            model_name='pressreleasepage',
            name='category',
            field=models.CharField(choices=[('audit reports', 'Audit reports'), ('campaign finance data summaries', 'Campaign finance data summaries'), ('commission appointments', 'Commission appointments'), ('disclosure initiatives', 'Disclosure initiatives'), ('enforcement matters', 'Enforcement matters'), ('hearings', 'Hearings'), ('litigation', 'Litigation'), ('non-filer publications', 'Non-filer publications'), ('open meetings and related matters', 'Open meetings and related matters'), ('presidential public funds', 'Presidential public funds'), ('rulemakings', 'Rulemakings'), ('other agency actions', 'Other agency actions'), ('', '')], max_length=255),
        ),
        migrations.AddField(
            model_name='recordpage',
            name='monthly_issue',
            field=models.CharField(blank=True, default='', max_length=255),
        ),
        migrations.CreateModel(
            name='RecordPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='home.RecordPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_recordpagetag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='recordpage',
            name='monthly_issue_url',
            field=models.CharField(blank=True, default='', max_length=255),
        ),
        migrations.CreateModel(
            name='AboutLandingPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('hero', wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True)),
                ('sections', wagtail.core.fields.StreamField((('sections', wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock(required=True)), ('intro', wagtail.core.blocks.RichTextBlock(blank=False, null=False, required=False)), ('button_text', wagtail.core.blocks.CharBlock(blank=False, null=False, required=False)), ('related_page', wagtail.core.blocks.PageChooserBlock(required=False))))),), null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CommissionerPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('first_name', models.CharField(default='', max_length=255)),
                ('middle_initial', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(default='', max_length=255)),
                ('sworn_in', models.DateField(blank=True, null=True)),
                ('term_expiration', models.DateField(blank=True, null=True)),
                ('party_affiliation', models.CharField(choices=[('D', 'Democrat'), ('R', 'Republican'), ('I', 'Independent')], max_length=2)),
                ('commissioner_title', models.CharField(blank=True, max_length=255)),
                ('commissioner_bio', wagtail.core.fields.StreamField((('paragraph', wagtail.core.blocks.RichTextBlock()),), blank=True, null=True)),
                ('commissioner_email', models.CharField(blank=True, max_length=255)),
                ('commissioner_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('commissioner_twitter', models.CharField(blank=True, max_length=255, null=True)),
                ('picture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('reappointed_dates', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ServicesLandingPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True)),
                ('hero', wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True)),
                ('intro', wagtail.core.fields.StreamField((('paragraph', wagtail.core.blocks.RichTextBlock()),), null=True)),
                ('feed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='TipsForTreasurersPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True)),
                ('date', models.DateField(default=datetime.date.today)),
                ('feed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('read_next', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.TipsForTreasurersPage')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AlterField(
            model_name='author',
            name='email',
            field=models.EmailField(blank=True, max_length=254),
        ),
        migrations.AlterField(
            model_name='author',
            name='title',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.CreateModel(
            name='DocumentFeedPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True)),
                ('intro', wagtail.core.fields.StreamField((('paragraph', wagtail.core.blocks.RichTextBlock()),), null=True)),
                ('feed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('category', models.CharField(choices=[('oig', 'oig'), ('strategy_budget_performance', 'strategy budget performance'), ('foia', 'foia'), ('privacy', 'privacy'), ('procurement_contracting_reports', 'procurement contracting reports'), ('annual_anniversary', 'annual anniversary'), ('agency_operations', 'agency operations')], max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='DocumentPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True)),
                ('date', models.DateField(default=datetime.date.today)),
                ('file_url', models.URLField(blank=True)),
                ('size', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(choices=[('audit report', 'Audit report'), ('inspection or special review report', 'Inspection or special review report'), ('semiannual report', 'Semiannual report'), ('strategic plan', 'Strategic plan'), ('work plan', 'Work plan'), ('agency financial report', 'Agency Financial Report'), ('congressional submission', 'Congressional submission'), ('performance and accountability report', 'Performance and accountability report'), ('summary of performance and financial information', 'Summary of performance and financial information'), ('annual report', 'Annual report'), ('summary report', 'Summary report'), ('privacy act notice', 'Privacy Act notice'), ('privacy policy', 'Privacy policy'), ('buy america report', 'Buy America report'), ('fair act', 'FAIR Act'), ('public procurement report', 'Public procurement report'), ('anniversary report', 'Anniversary report'), ('gift report', 'Gift report'), ('shutdown plan', 'Shutdown plan'), ('study', 'Study')], max_length=255, null=True)),
                ('feed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('year_only', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='pressreleasepage',
            name='homepage_pin_start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recordpage',
            name='homepage_pin_start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='ReportsLandingPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True)),
                ('intro', wagtail.core.fields.StreamField((('paragraph', wagtail.core.blocks.RichTextBlock()),), null=True)),
                ('document_feeds', wagtail.core.fields.StreamField((('document_feed_blurb', wagtail.core.blocks.StructBlock((('page', wagtail.core.blocks.PageChooserBlock()), ('description', wagtail.core.blocks.CharBlock())))),), blank=True, null=True)),
                ('feed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='MeetingPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('time', models.TimeField(blank=True, help_text='If no time is entered the time will be set to 10 a.m.', null=True)),
                ('agenda', wagtail.core.fields.StreamField((('agenda_item', wagtail.core.blocks.StructBlock((('item_title', wagtail.core.blocks.TextBlock()), ('item_text', wagtail.core.blocks.RichTextBlock(required=False)), ('item_audio', wagtail.documents.blocks.DocumentChooserBlock(required=False))))),))),
                ('imported_html', wagtail.core.fields.StreamField((('html_block', wagtail.core.blocks.RawHTMLBlock()),), blank=True, null=True)),
                ('date', models.DateField(default=datetime.date.today)),
                ('approved_minutes_date', models.DateField(blank=True, null=True)),
                ('approved_minutes_link', models.URLField(blank=True)),
                ('draft_minutes_links', models.TextField(blank=True, help_text='URLs separated by a newline')),
                ('end_date', models.DateField(blank=True, null=True)),
                ('live_video_url', models.URLField(blank=True)),
                ('meeting_type', models.CharField(choices=[('O', 'Open meeting'), ('E', 'Executive session')], default='O', max_length=2)),
                ('sunshine_act_links', models.TextField(blank=True, help_text='URLs separated by a newline')),
                ('full_audio_url', models.URLField(blank=True)),
                ('full_video_url', models.URLField(blank=True)),
                ('live_video_captions', models.URLField(blank=True)),
                ('mtg_transcript_url', models.URLField(blank=True)),
                ('homepage_hide', models.BooleanField(default=False)),
                ('sunshine_act_doc_upld', wagtail.core.fields.StreamField((('sunshine_act_upld', wagtail.documents.blocks.DocumentChooserBlock(required=False)),), blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AlterField(
            model_name='digestpage',
            name='body',
            field=wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='pressreleasepage',
            name='body',
            field=wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='recordpage',
            name='body',
            field=wagtail.core.fields.StreamField((('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('html', wagtail.core.blocks.RawHTMLBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('custom_table', wagtail.core.blocks.StructBlock((('custom_table', wagtail.core.blocks.StreamBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('table_intro', wagtail.core.blocks.RichTextBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': True, 'height': 108, 'language': 'en', 'rowHeaders': True, 'startCols': 6, 'startRows': 7})), ('footnote', wagtail.core.blocks.CharBlock(required=False))))),)))), blank=True, null=True),
        ),
        migrations.CreateModel(
            name='HomePageBannerAnnouncement',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('link_title', models.CharField(blank=True, max_length=255)),
                ('link_url', models.URLField(blank=True, max_length=255)),
                ('link_title_2', models.CharField(blank=True, max_length=255)),
                ('link_url_2', models.URLField(blank=True, max_length=255)),
                ('date_active', models.DateTimeField(help_text='Set active date-active here and         leave Go-Live and Expiry fields blank in the Settings-Tab above.')),
                ('active', models.BooleanField(default=True)),
                ('date_inactive', models.DateTimeField(help_text='Set date-inactive here and         leave Go-Live and Expiry fields blank in the Settings-Tab above.', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ReportingExamplePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('pre_title', models.CharField(blank=True, choices=[('how', 'How to report'), ('scenario', 'Example scenario')], max_length=255, null=True)),
                ('body', wagtail.core.fields.StreamField((('paragraph', wagtail.core.blocks.RichTextBlock()), ('example_image', wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock(required=False)), ('caption', wagtail.core.blocks.RichTextBlock(required=True)), ('image', wagtail.images.blocks.ImageChooserBlock(required=True))))), ('reporting_example_cards', wagtail.core.blocks.StructBlock((('card_width', wagtail.core.blocks.ChoiceBlock(choices=[(2, '1/2'), (3, '1/3')], help_text='Control the width of the cards')), ('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), icon='doc-empty')))))), null=True)),
                ('related_media_title', models.CharField(blank=True, max_length=255, null=True)),
                ('related_media', wagtail.core.fields.StreamField((('continue_learning', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('url', wagtail.core.blocks.URLBlock()), ('media_type', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.CharBlock()))), icon='doc-empty', template='blocks/related-media.html')),), null=True)),
                ('featured_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='recordpage',
            name='formatted_title',
            field=models.CharField(blank=True, default='', help_text='Use if you need italics in the title. e.g. <em>Italicized words</em>', max_length=255, null=True),
        ),
        migrations.CreateModel(
            name='EmbedTableSnippet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='AlertForEmergencyUseOnly',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('alert_description', models.CharField(blank=True, max_length=255)),
                ('alert_link_title', models.CharField(blank=True, max_length=255)),
                ('alert_link_url', models.URLField(blank=True, max_length=255)),
                ('alert_date_active', models.DateTimeField(help_text='Set active date-active here and         leave Go-Live and Expiry fields blank in the Settings-Tab above.')),
                ('alert_date_inactive', models.DateTimeField(help_text='Set date-inactive here and         leave Go-Live and Expiry fields blank in the Settings-Tab above.', null=True)),
                ('alert_active', models.BooleanField(default=False, help_text='Requires approval by Amy Kort or Wei Luo prior to deployment.')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ContactPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('contact_items', wagtail.core.fields.StreamField((('contact_items', wagtail.core.blocks.StructBlock((('label', wagtail.core.blocks.CharBlock(icon='title', required=False)), ('contact_items', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('item_label', wagtail.core.blocks.CharBlock(required=False)), ('item_icon', wagtail.core.blocks.ChoiceBlock(choices=[('email', 'Email'), ('fax', 'Fax'), ('hand', 'Hand delivery'), ('phone', 'Phone'), ('mail', 'Mail'), ('github', 'Github'), ('question-bubble', 'Question')])), ('item_info', wagtail.core.blocks.RichTextBlock(required=True))))))))),))),
                ('services_title', models.TextField()),
                ('services', wagtail.core.fields.StreamField((('services', wagtail.core.blocks.RichTextBlock()),))),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]